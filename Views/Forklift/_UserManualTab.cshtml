@{
    Html.ViewData.TemplateInfo.HtmlFieldPrefix = "UserManual";

    var webManualSelector = new List<SelectListItem> {
        new SelectListItem("Átadta", "false"),
        new SelectListItem("Nem adta át (alábbi internetcímen elérhető)", "true")
    };

    var manualSupplierSelector = new List<SelectListItem> {
        new SelectListItem("Gyártó", "MANUFACTURER"),
        new SelectListItem("Forgalmazó", "DISTRIBUTOR"),
        new SelectListItem("Eladó","SELLER"),
        new SelectListItem("Bérbeadó", "LEASER",false, true)
    };

    var manualRecipientSelector = new List<SelectListItem> {
        new SelectListItem("Üzemeltető", "OPERATOR"),
        new SelectListItem("Vásárló", "CUSTOMER"),
        new SelectListItem("Bérlő", "LEASEE", false, true)
    };
}

@model Forklift.UserManualInformation

<div class="tab-pane fade col-11" id="manual" role="tabpanel" aria-labelled-by="manual-tab">


    <div class="card col-md-9 mb-3">
        <div class="card-body">


            <div class="col-md-5 mb-3">
                <div class="input-group">
                    <span class="input-group-text col-md-6">
                        @Html.LabelFor(um => um.DateOfTransfer, "Átadás dátuma:")
                    </span>
                    @Html.TextBoxFor(um => um.DateOfTransfer, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
                    @Html.ValidationMessageFor(um => um.DateOfTransfer, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="input-group mb-3">
                <span class="input-group-text col-md-5">
                    @Html.LabelFor(um => um.IsOnlineManual, "A használati utasítást az átadó:")
                </span>
                @Html.DropDownListFor(um => um.IsOnlineManual, webManualSelector, new { @class = "form-select" })
                @Html.ValidationMessageFor(um => um.IsOnlineManual, "", new { @class = "text-danger" })
            </div>

            <div class="input-group mb-3" id="WebsiteInput">
                <span class="input-group-text col-md-2">
                    @Html.LabelFor(um => um.ManualWebsite, "Webcím:")
                </span>
                @Html.TextBoxFor(um => um.ManualWebsite, "", new { @class = "form-control" })
                @Html.ValidationMessageFor(um => um.ManualWebsite, "", new { @class = "text-danger" })
            </div>

            <div class="row">

                <div class="col-md-6">
                    <div class="card">
                        <div class="card-header">
                            Átadó
                        </div>
                        <div class="card-body">
                            <div class="input-group mb-3">
                                <span class="input-group-text col-md-5">
                                    @Html.LabelFor(um => um.SupplierType, "Átadó típusa:")
                                </span>
                                @Html.DropDownListFor(um => um.SupplierType, manualSupplierSelector, new { @class = "form-select" })
                                @Html.ValidationMessageFor(um => um.SupplierType, "", new { @class = "text-danger" })
                            </div>

                            <div class="input-group mb-3">
                                <span class="input-group-text col-md-5">
                                    @Html.LabelFor(um => um.SupplierSigneeName, "Képviselő neve:")
                                </span>
                                @Html.TextBoxFor(um => um.SupplierSigneeName, new { @class = "form-control" })
                                @Html.ValidationMessageFor(um => um.SupplierSigneeName, "", new { @class = "text-danger" })
                            </div>

                            <div class="input-group">
                                <span class="input-group-text col-md-5">
                                    @Html.LabelFor(um => um.SupplierSigneePosition, "Beosztása:")
                                </span>
                                @Html.TextBoxFor(um => um.SupplierSigneePosition, new { @class = "form-control" })
                                @Html.ValidationMessageFor(um => um.SupplierSigneePosition, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="card">
                        <div class="card-header">
                            Átvevő
                        </div>
                        <div class="card-body">
                            <div class="input-group mb-3">
                                <span class="input-group-text col-md-5">
                                    @Html.LabelFor(um => um.RecipientType, "Átvevő típusa:")
                                </span>
                                @Html.DropDownListFor(um => um.RecipientType, manualRecipientSelector, new { @class = "form-select" })
                                @Html.ValidationMessageFor(um => um.RecipientType, "", new { @class = "text-danger" })
                            </div>

                            <div class="input-group mb-3">
                                <span class="input-group-text col-md-5">
                                    @Html.LabelFor(um => um.RecipientSigneeName, "Képviselő neve:\n ")
                                </span>
                                @Html.TextBoxFor(um => um.RecipientSigneeName, new { @class = "form-control" })
                                @Html.ValidationMessageFor(um => um.RecipientSigneeName, "", new { @class = "text-danger" })
                            </div>

                            <div class="input-group">
                                <span class="input-group-text col-md-5">
                                    @Html.LabelFor(um => um.RecipientSigneePosition, "Beosztása:")
                                </span>
                                @Html.TextBoxFor(um => um.RecipientSigneePosition, new { @class = "form-control" })
                                @Html.ValidationMessageFor(um => um.RecipientSigneePosition, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

            </div>

        </div>

    </div>


    <div class="card fade col-md-9" id="ForkliftManualReturn">
        <div class="card-header">
            <h4>Bérelt targonca visszaruházás</h4>
        </div>
        <div class="card-footer">
            Ameddig a targonca a bérlő tulajdonában van üresen hagyandó
        </div>

        <div class="card-body">

            <div class="col-md-5 mb-3">
                <div class="input-group">
                    <span class="input-group-text col-md-6">
                        @Html.LabelFor(um => um.LeaseReturnDate, "Visszaadás dátuma:")
                    </span>
                    @Html.TextBoxFor(um => um.LeaseReturnDate, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
                    @Html.ValidationMessageFor(um => um.LeaseReturnDate, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="row">

                <div class="col-md-6">
                    <div class="card">
                        <div class="card-header">
                            Bérlő
                        </div>
                        <div class="card-body">

                            <div class="input-group mb-3">
                                <span class="input-group-text col-md-5">
                                    @Html.LabelFor(um => um.LeaseeSigneeName, "Képviselő neve:\n ")
                                </span>
                                @Html.TextBoxFor(um => um.LeaseeSigneeName, new { @class = "form-control" })
                                @Html.ValidationMessageFor(um => um.LeaseeSigneeName, "", new { @class = "text-danger" })
                            </div>

                            <div class="input-group">
                                <span class="input-group-text col-md-5">
                                    @Html.LabelFor(um => um.LeaseeSigneePosition, "Beosztása:")
                                </span>
                                @Html.TextBoxFor(um => um.LeaseeSigneePosition, new { @class = "form-control" })
                                @Html.ValidationMessageFor(um => um.LeaseeSigneePosition, "", new { @class = "text-danger" })
                            </div>

                        </div>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="card">
                        <div class="card-header">
                            Bérbevevő
                        </div>
                        <div class="card-body">

                            <div class="input-group mb-3">
                                <span class="input-group-text col-md-5">
                                    @Html.LabelFor(um => um.LeaserSigneeName, "Képviselő neve:")
                                </span>
                                @Html.TextBoxFor(um => um.LeaserSigneeName, new { @class = "form-control" })
                                @Html.ValidationMessageFor(um => um.LeaserSigneeName, "", new { @class = "text-danger" })
                            </div>

                            <div class="input-group">
                                <span class="input-group-text col-md-5">
                                    @Html.LabelFor(um => um.LeaserSigneePosition, "Beosztása:")
                                </span>
                                @Html.TextBoxFor(um => um.LeaserSigneePosition, new { @class = "form-control" })
                                @Html.ValidationMessageFor(um => um.LeaserSigneePosition, "", new { @class = "text-danger" })
                            </div>

                        </div>
                    </div>
                </div>

            </div>


        </div>

    </div>



</div>


<script>

    document.addEventListener('DOMContentLoaded', function () {
        const checkbox = document.getElementById('Operator_IsDifferentOperator');
        const supplierDropdown = document.getElementById('UserManual_SupplierType');
        const recipientDropdown = document.getElementById('UserManual_RecipientType');
        const manualReturnDiv = document.getElementById(('ForkliftManualReturn'));

        let prevSupplierType = 'MANUFACTURER';
        let prevRecipientType = 'OPERATOR';

        checkbox.addEventListener('change', function () {

            supplierDropdown.disabled = checkbox.checked;
            recipientDropdown.disabled = checkbox.checked;


            if (checkbox.checked) {
                manualReturnDiv.classList.add('show');

                prevSupplierType = supplierDropdown.value;
                prevRecipientType = recipientDropdown.value;

                supplierDropdown.value = 'LEASER';
                recipientDropdown.value = 'LEASEE';
            }
            else {
                manualReturnDiv.classList.remove('show');

                supplierDropdown.value = prevSupplierType;
                recipientDropdown.value = prevRecipientType;

            }

        });


        if (checkbox.checked)
            manualReturnDiv.classList.add('show');
        else
            manualReturnDiv.classList.remove('show');

        supplierDropdown.disabled = checkbox.checked;
        recipientDropdown.disabled = checkbox.checked;
    });


    document.addEventListener('DOMContentLoaded', function () {

        const dropdown = document.getElementById('UserManual_IsOnlineManual');
        const div = document.getElementById('WebsiteInput');

        dropdown.addEventListener('change', function () {

            if (dropdown.value === 'true') {
                div.style.display = 'flex';
            }
            else {
                div.style.display = 'none';
            }

        });

        if (dropdown.value === 'true') {
            div.style.display = 'flex';
        }
        else {
            div.style.display = 'none';
        }
    });

</script>