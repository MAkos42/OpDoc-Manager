@{
    Html.ViewData.TemplateInfo.HtmlFieldPrefix = "Adapter";

    var validationAttributes = new Dictionary<string, object> { { "class", "text-danger" } };

}
@model Forklift.AdapterInformation

<div class="tab-pane fade" id="adapter" role="tabpanel" aria-labelled-by="adapter-tab">


    <div class="row mb-3">

        <div class="col-md-7">
            <div class="input-group">
                <span class="input-group-text col-md-6">
                    @Html.LabelFor(a => a.Name, "Targoncához rendszeresített adapter:")
                </span>
                @Html.TextBoxFor(a => a.Name, new { @class = "form-control" })
                @Html.ValidationMessageFor(a => a.Name, "", validationAttributes)
            </div>
        </div>

    </div>

    <table class="table table-bordered">
        <thead>
            <tr class="row">
                <th class="col-md-1 align-content-center  bg-light">Sorszám</th>
                <th class="col-md-3 align-content-center">Név</th>
                <th class="col-md-1 align-content-center">Típus</th>
                <th class="col-md-3 align-content-center">Gyártási szám</th>
                <th class="col-md-1 align-content-center">Saját Tömeg (kg)</th>
                <th class="col-md-2 align-content-center">A tömegközéppont távolsága a felfogólaptól (mm)</th>
                <th class="col-md-1 align-content-center text-center bg-light"><button id="AddAdapter" class="btn btn-primary">Új</button></th>
            </tr>
        </thead>
        <tbody id="AdapterTable">
            @if (Model is not null && Model.AdapterList is not null && Model.AdapterList.Count > 0)
            {

                for (int i = 0; i < Model.AdapterList.Count(); i++)
                {
                    <tr class="row">
                        @Html.HiddenFor(a => a.AdapterList[i].Id, new { @class = "record-value" })
                        <td class="col-md-1 text-center bg-light number-col">@Model.AdapterList[i].Number</td>

                        <td class="p-1 col-md-3">
                            @Html.TextBoxFor(a => a.AdapterList[i].Name, new { @class = "form-control border-0 record-value", @required = "" })
                        </td>
                        <td class="p-1 col-md-1">
                            @Html.TextBoxFor(a => a.AdapterList[i].Type, new { @class = "form-control border-0 record-value", @required = "" })
                        </td>
                        <td class="p-1 col-md-3">
                            @Html.TextBoxFor(a => a.AdapterList[i].SerialNumber, new { @class = "form-control border-0 record-value", @required = "" })
                        </td>
                        <td class="p-1 col-md-1">
                            @Html.TextBoxFor(a => a.AdapterList[i].Weight, new { @class = "form-control border-0 record-value", @type = "number", @required = "" })
                        </td>
                        <td class="p-1 col-md-2">
                            @Html.TextBoxFor(a => a.AdapterList[i].LoadCenterDistance, new { @class = "form-control border-0 record-value", @type = "number", @required = "" })
                        </td>
                        <td class="p-1 col-md-1 text-center align-content-center">
                            <button class="btn btn-danger delete-button">
                                <i class="bi bi-trash3"></i>
                            </button>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr id="error-row">
                    <td colspan="7" class="text-center">Adapter lista üres.</td>
                </tr>
            }
        </tbody>
    </table>




</div>


<script>
    document.addEventListener("DOMContentLoaded", function () {
        initAdapterPartial();
    });

    function initAdapterPartial(){
        const adapterTable = document.getElementById('AdapterTable');
        const addButton = document.getElementById('AddAdapter');
        const deleteButtons = document.querySelectorAll('.delete-button');

        addButton.addEventListener('click', function (event) {
            event.preventDefault();
            var url = window.location.href.split("/");
            url.pop();
            var forklift = url.pop();

            var number = document.querySelectorAll('tr.row').length;

            $.ajax({
                url: '@Url.Action("AddAdapter", "Forklift")', // URL of the action that returns the partial view
                type: 'POST',
                data: { id: forklift, number: number },
                success: function (result) {
                    //Add the new row to the end of the table
                    var errorRow = adapterTable.querySelector('#error-row')
                    if(errorRow != null)
                        errorRow.remove();

                    adapterTable.innerHTML += result;

                    //assign the delete function to the button
                    var buttons = document.querySelectorAll('.delete-button')
                    buttons.forEach(button => addDeleteButton(button))
                },
                error: function (xhr, status, error) {
                    alert('Error: ' + error);
                }
            });

        });

        deleteButtons.forEach(button => addDeleteButton(button));

        }

    function addDeleteButton(button){
        const adapterTable = document.getElementById('AdapterTable');

        button.addEventListener('click', function (event) {
            event.preventDefault();
            var row = button.closest('tr');
            row.remove();

            reorderRecords();

            if (adapterTable.querySelectorAll('tr.row').length === 0)
                adapterTable.innerHTML = '<tr id="error-row"><td colspan="7" class="text-center">Adapter lista üres.</td></tr>';
        });
    }

    function reorderRecords(){
        const rows = document.querySelectorAll('#AdapterTable tr')

        rows.forEach((row, index) =>{
            inputs = row.querySelectorAll('.record-value')
            inputs.forEach(input => {
                var newName = input.getAttribute('name').replace(/\[\d+\]/, `[${index}]`);
                input.setAttribute('name', newName);

                var newId = input.getAttribute('id').replace(/\_\d+\_\!/, `_${index}_!`);
                input.setAttribute('id', newId);
            });

            var numberCol = row.querySelector('.number-col')

            numberCol.innerHTML = index+1;
        });
    }

</script>